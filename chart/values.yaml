# We are using a meta Helm chart called app-template from bwj-s.
# Reference values can be inspected there.
# Ref: https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml

app-template:

  defaultPodOptions:
    labels: {}
    annotations:
      sidecar.istio.io/inject: "true"

  controllers:

    application:
      type: deployment
      replicas: 2

      labels: {}
      annotations:
        reloader.stakater.com/auto: "true"

       containers:
         main:
           image:
             repository: ghcr.io/YOUR_USERNAME/YOUR_REPO
             tag: latest
             pullPolicy: Always

          resources:
            requests:
              memory: "512Mi"
              cpu: "1"
            limits:
              memory: "512Mi"

          envFrom: []
            # Uncomment this if the related section is enabled in 'rawResources'
            #- secretRef:
            #    name: "{{ .Release.Name }}-credentials"

  configMaps:
    configuration:
      enabled: true
      annotations: {}
      data:
        config.toml: |
          # MCP Server Configuration
          [server]
          name = "MCP Forge Python"
          version = "0.1.0"

          [server.transport]
          type = "http"

          [server.transport.http]
          host = "0.0.0.0"

          # Middleware Configuration
          [middleware.access_logs]
          excluded_headers = ["x-excluded"]
          redacted_headers = ["authorization", "x-validated-jwt"]

          [middleware.jwt]
          enabled = false

          [middleware.jwt.validation]
          strategy = "external"
          forwarded_header = "X-Validated-Jwt"

           [middleware.jwt.validation.local]
           jwks_uri = "https://your-keycloak.example.com/realms/your-realm/protocol/openid-connect/certs"
          cache_interval = 10

           [[middleware.jwt.validation.local.allow_conditions]]
           expression = 'has(payload.email) && payload.email.endswith("@yourdomain.com")'

           # OAuth Configuration
           [oauth_authorization_server]
           enabled = true
           issuer_uri = "https://your-keycloak.example.com/realms/your-realm"

           [oauth_protected_resource]
           enabled = true
           resource = "https://your-mcp-domain.example.com"
           auth_servers = ["https://your-keycloak.example.com/realms/your-realm"]
           jwks_uri = "https://your-keycloak.example.com/realms/your-realm/protocol/openid-connect/certs"
          scopes_supported = ["openid", "profile", "email", "groups", "mcp-forge-python/custom-audience"]

  persistence:
    configuration:
      enabled: true
      name: "{{ .Release.Name }}"
      type: configMap
      advancedMounts:
        application: # Controller
          main: # Container
            - path: /data/config.toml
              readOnly: true
              mountPropagation: None
              subPath: config.toml

  service:
    backend:
      controller: application
      type: ClusterIP
      ports:
        http:
          port: 8080
          protocol: TCP

  # Some stuff is not covered by this chart
  rawResources:
    credentials:
      enabled: false
      apiVersion: external-secrets.io/v1beta1
      kind: ExternalSecret
      spec:
        spec:
          refreshInterval: "15s"
          secretStoreRef:
            name: external-secrets-hashicorp-vault
            kind: ClusterSecretStore
          target:
            name: "{{ .Release.Name }}-credentials"
          data:
            - secretKey: PLACEHOLDER
              remoteRef:
                key: your-kv/applications/mcp-forge-python/credentials
                property: username

    public-api-entrance:
      enabled: false
      apiVersion: gateway.networking.k8s.io/v1
      kind: HTTPRoute
      spec:
        spec:
           hostnames:
             - your-mcp-domain.example.com
          parentRefs:
            - group: gateway.networking.k8s.io
              kind: Gateway
              name: production
              namespace: istio
              sectionName: https-terminate
          rules:
            - backendRefs: &mainBackendRef
                - group: ""
                  kind: Service
                  name: mcp-forge-python
                  port: 8080
                  weight: 1
              matches:
                - path:
                    type: PathPrefix
                    value: /

    # This is temporary here as a trick to preserve real-client-ip. The ideal solution is trusting CIDRs, but it requires
    # Istio be able to set 'use_remote_address: false' and ATM, it's hardcoded for the gateways:
    # Ref: https://github.com/istio/istio/blob/f772ceea87ae58896e1eabe2cf83ebfd8c54bf6d/pilot/pkg/networking/core/v1alpha3/gateway.go#L358
    preserve-client-ip:
      enabled: false
      apiVersion: networking.istio.io/v1alpha3
      kind: EnvoyFilter
      spec:
        spec:
          workloadSelector:
            labels:
              app.kubernetes.io/name: mcp-forge-python
          configPatches:
            - applyTo: NETWORK_FILTER
              match:
                context: ANY
                listener:
                  filterChain:
                    filter:
                      name: envoy.filters.network.http_connection_manager
              patch:
                operation: MERGE
                value:
                  typed_config:
                    '@type': type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    xff_num_trusted_hops: 3
                    use_remote_address: true
                    skip_xff_append: false

    istio-deny-access-from-untrusted-sources:
      enabled: false
      apiVersion: security.istio.io/v1
      kind: AuthorizationPolicy
      spec:
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: mcp-forge-python

          action: DENY
          rules:
            - from:
                - source:
                    notRemoteIpBlocks:
                      # Kubernetes stuff
                      - 10.0.0.0/8

                      # Claude Web GUI
                      - 34.162.102.82/32
                      - 34.162.183.95/32
                      - 34.162.142.92/32
                      - 34.162.46.92/32
                      - 34.162.136.91/32

                      # Other providers from here
                      # ...
              to:
                - operation:
                    paths:
                      - /
                      - /*

    istio-request-authentication-header:
      enabled: false
      apiVersion: security.istio.io/v1
      kind: RequestAuthentication
      spec:
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: mcp-forge-python
           jwtRules:
             - forwardOriginalToken: true
               outputPayloadToHeader: X-Validated-Jwt
               issuer: https://your-keycloak.example.com/realms/your-realm
               jwksUri: https://your-keycloak.example.com/realms/your-realm/protocol/openid-connect/certs

    istio-check-jwt-claims:
      enabled: false
      apiVersion: security.istio.io/v1
      kind: AuthorizationPolicy
      spec:
        spec:
          selector:
            matchLabels:
              app.kubernetes.io/name: mcp-forge-python
          action: DENY
          rules:
            - to:
                - operation:
                    paths:
                      - /mcp
                      - /mcp/*
               when:
                 - key: request.auth.claims[iss]
                   notValues:
                     - https://your-keycloak.example.com/realms/your-realm
                 - key: request.auth.audiences
                   notValues:
                     - https://your-mcp-domain.example.com